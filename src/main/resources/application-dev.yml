spring:
  config:
    import: optional:file:.env[.properties]
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  datasource:
    url: ${DEV_DB_URL}?prepareThreshold=0&preferQueryMode=simple
    username: ${DEV_DB_USERNAME}
    password: ${DEV_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 30000

jwt:
  secret: sr4pAFdtvtGl2DG3CfKnikpSRaXPf0S7aKkLUsbkJic=
  access-exp-ms: 900000
  refresh-exp-sec: 1209600

app:
  cookie:
    secure: false
    sameSite: Lax
    domain: ""

live-rollup:
  batch-size: 1000
  sql:
    upsert: >
      INSERT INTO channel_live_rollup (public_id, live_count, snap_at)
      VALUES (:publicId, :liveCount, :snapAt)
      ON CONFLICT (public_id, snap_at)
      DO UPDATE SET live_count = EXCLUDED.live_count
    delete-stale: >
      DELETE FROM channel_live_rollup WHERE snap_at < :snapAt
